/**
 * localhost:1234
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
export interface Tag {
    /**
     * Unique identifier for the term.
     */
    id?: number;
    /**
     * Number of published posts for the term.
     */
    count?: number;
    /**
     * HTML description of the term.
     */
    description?: string;
    /**
     * URL of the term.
     */
    link?: string;
    /**
     * HTML title for the term.
     */
    name?: string;
    /**
     * An alphanumeric identifier for the term unique to its type.
     */
    slug?: string;
    /**
     * Type attribution for the term.
     */
    taxonomy?: Tag.TaxonomyEnum;
    /**
     * Meta fields.
     */
    meta?: any;
}
export interface TagOpt {
    /**
     * Unique identifier for the term.
     */
    id?: number;
    /**
     * Number of published posts for the term.
     */
    count?: number;
    /**
     * HTML description of the term.
     */
    description?: string;
    /**
     * URL of the term.
     */
    link?: string;
    /**
     * HTML title for the term.
     */
    name?: string;
    /**
     * An alphanumeric identifier for the term unique to its type.
     */
    slug?: string;
    /**
     * Type attribution for the term.
     */
    taxonomy?: Tag.TaxonomyEnum;
    /**
     * Meta fields.
     */
    meta?: any;
}
export declare namespace Tag {
    type TaxonomyEnum = 'category' | 'post_tag' | 'nav_menu' | 'link_category' | 'post_format';
    const TaxonomyEnum: {
        Category: import("./category").Category.TaxonomyEnum;
        PostTag: import("./category").Category.TaxonomyEnum;
        NavMenu: import("./category").Category.TaxonomyEnum;
        LinkCategory: import("./category").Category.TaxonomyEnum;
        PostFormat: import("./category").Category.TaxonomyEnum;
    };
}
