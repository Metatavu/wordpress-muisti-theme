/**
 * localhost:1234
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { UserAvatarUrls } from './userAvatarUrls';
export interface User {
    /**
     * Unique identifier for the user.
     */
    id?: number;
    /**
     * Login name for the user.
     */
    username?: string;
    /**
     * Display name for the user.
     */
    name?: string;
    /**
     * First name for the user.
     */
    firstName?: string;
    /**
     * Last name for the user.
     */
    lastName?: string;
    /**
     * The email address for the user.
     */
    email?: string;
    /**
     * URL of the user.
     */
    url?: string;
    /**
     * Description of the user.
     */
    description?: string;
    /**
     * Author URL of the user.
     */
    link?: string;
    /**
     * Locale for the user.
     */
    locale?: User.LocaleEnum;
    /**
     * The nickname for the user.
     */
    nickname?: string;
    /**
     * An alphanumeric identifier for the user.
     */
    slug?: string;
    /**
     * Registration date for the user.
     */
    registeredDate?: Date;
    /**
     * Roles assigned to the user.
     */
    roles?: Array<string>;
    /**
     * Password for the user (never included).
     */
    password?: string;
    /**
     * All capabilities assigned to the user.
     */
    capabilities?: any;
    /**
     * Any extra capabilities assigned to the user.
     */
    extraCapabilities?: any;
    avatarUrls?: UserAvatarUrls;
    /**
     * Meta fields.
     */
    meta?: any;
}
export interface UserOpt {
    /**
     * Unique identifier for the user.
     */
    id?: number;
    /**
     * Login name for the user.
     */
    username?: string;
    /**
     * Display name for the user.
     */
    name?: string;
    /**
     * First name for the user.
     */
    firstName?: string;
    /**
     * Last name for the user.
     */
    lastName?: string;
    /**
     * The email address for the user.
     */
    email?: string;
    /**
     * URL of the user.
     */
    url?: string;
    /**
     * Description of the user.
     */
    description?: string;
    /**
     * Author URL of the user.
     */
    link?: string;
    /**
     * Locale for the user.
     */
    locale?: User.LocaleEnum;
    /**
     * The nickname for the user.
     */
    nickname?: string;
    /**
     * An alphanumeric identifier for the user.
     */
    slug?: string;
    /**
     * Registration date for the user.
     */
    registeredDate?: Date;
    /**
     * Roles assigned to the user.
     */
    roles?: Array<string>;
    /**
     * Password for the user (never included).
     */
    password?: string;
    /**
     * All capabilities assigned to the user.
     */
    capabilities?: any;
    /**
     * Any extra capabilities assigned to the user.
     */
    extraCapabilities?: any;
    avatarUrls?: UserAvatarUrls;
    /**
     * Meta fields.
     */
    meta?: any;
}
export declare namespace User {
    type LocaleEnum = 'en_US';
    const LocaleEnum: {
        US: "en_US";
    };
}
