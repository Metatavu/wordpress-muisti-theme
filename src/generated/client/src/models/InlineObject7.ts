// tslint:disable
/**
 * localhost:1234
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineObject7
 */
export interface InlineObject7 {
    /**
     * Unique identifier for the object.
     * @type {number}
     * @memberof InlineObject7
     */
    id?: number;
    /**
     * The date the object was published, in the site\'s timezone.
     * @type {Date}
     * @memberof InlineObject7
     */
    date?: Date;
    /**
     * The date the object was published, as GMT.
     * @type {Date}
     * @memberof InlineObject7
     */
    date_gmt?: Date;
    /**
     * An alphanumeric identifier for the object unique to its type.
     * @type {string}
     * @memberof InlineObject7
     */
    slug?: string;
    /**
     * A named status for the object.
     * @type {string}
     * @memberof InlineObject7
     */
    status?: InlineObject7StatusEnum;
    /**
     * The title for the object.
     * @type {string}
     * @memberof InlineObject7
     */
    title?: string;
    /**
     * The ID for the author of the object.
     * @type {number}
     * @memberof InlineObject7
     */
    author?: number;
    /**
     * Whether or not comments are open on the object.
     * @type {string}
     * @memberof InlineObject7
     */
    comment_status?: InlineObject7CommentStatusEnum;
    /**
     * Whether or not the object can be pinged.
     * @type {string}
     * @memberof InlineObject7
     */
    ping_status?: InlineObject7PingStatusEnum;
    /**
     * Meta fields.
     * @type {string}
     * @memberof InlineObject7
     */
    meta?: string;
    /**
     * The theme file to use to display the object.
     * @type {string}
     * @memberof InlineObject7
     */
    template?: string;
    /**
     * Alternative text to display when attachment is not displayed.
     * @type {string}
     * @memberof InlineObject7
     */
    alt_text?: string;
    /**
     * The attachment caption.
     * @type {string}
     * @memberof InlineObject7
     */
    caption?: string;
    /**
     * The attachment description.
     * @type {string}
     * @memberof InlineObject7
     */
    description?: string;
    /**
     * The ID for the associated post of the attachment.
     * @type {number}
     * @memberof InlineObject7
     */
    post?: number;
}

export function InlineObject7FromJSON(json: any): InlineObject7 {
    return InlineObject7FromJSONTyped(json, false);
}

export function InlineObject7FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject7 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'date': !exists(json, 'date') ? undefined : new Date(json['date']),
        'date_gmt': !exists(json, 'date_gmt') ? undefined : new Date(json['date_gmt']),
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'author': !exists(json, 'author') ? undefined : json['author'],
        'comment_status': !exists(json, 'comment_status') ? undefined : json['comment_status'],
        'ping_status': !exists(json, 'ping_status') ? undefined : json['ping_status'],
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
        'template': !exists(json, 'template') ? undefined : json['template'],
        'alt_text': !exists(json, 'alt_text') ? undefined : json['alt_text'],
        'caption': !exists(json, 'caption') ? undefined : json['caption'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'post': !exists(json, 'post') ? undefined : json['post'],
    };
}

export function InlineObject7ToJSON(value?: InlineObject7 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'date': value.date == null ? undefined : value.date.toISOString(),
        'date_gmt': value.date_gmt == null ? undefined : value.date_gmt.toISOString(),
        'slug': value.slug,
        'status': value.status,
        'title': value.title,
        'author': value.author,
        'comment_status': value.comment_status,
        'ping_status': value.ping_status,
        'meta': value.meta,
        'template': value.template,
        'alt_text': value.alt_text,
        'caption': value.caption,
        'description': value.description,
        'post': value.post,
    };
}

/**
* @export
* @enum {string}
*/
export enum InlineObject7StatusEnum {
    Publish = 'publish',
    Future = 'future',
    Draft = 'draft',
    Pending = 'pending',
    Private = 'private'
}
/**
* @export
* @enum {string}
*/
export enum InlineObject7CommentStatusEnum {
    Open = 'open',
    Closed = 'closed'
}
/**
* @export
* @enum {string}
*/
export enum InlineObject7PingStatusEnum {
    Open = 'open',
    Closed = 'closed'
}


